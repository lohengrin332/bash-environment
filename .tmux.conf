# new-session -d -s main -n code_l
# 
# new-window -n bash_l
# new-window -n bash_l
# new-window -n db_l
# new-window -n logs_l
# new-window -n code_r
# new-window -n bash_r
# new-window -n bash_r
# new-window -n db_r
# new-window -n logs_r
# 
# selectw -t 0

# set the prefix to ^A
unbind C-b
set -g prefix ^A
bind a send-prefix
bind ^a last-window

# add various ssh-related vars to those copied to the new tmux environment
set-option -ga update-environment ' SSH_AUTH_SOCK SSH_AGENT_PID'

# visual bell only
set-option -ga visual-bell on

# no delay for the escape key
set -s escape-time 1

# use 256-color terminal
set -g default-terminal "screen-256color"

# use esc key to enter copy mode
unbind [
bind Escape copy-mode
# use vim keybindings for copy mode
setw -g mode-keys vi
# use y to copy
# Default paste is <prefix> ]

# Selection / copy / paste
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi V send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send -X cancel

# For tmux versions <2.5
# bind-key -t vi-copy y copy-selection
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy V rectangle-toggle
# bind-key -t vi-copy Escape cancel

# reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# have windows auto-rename themselves based on running command
set-window-option -g automatic-rename on

# split panes using | and -
unbind '"'
bind | split-window -h -c '#{pane_current_path}'

unbind %
bind - split-window -v -c '#{pane_current_path}'

# pane navigation
bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R
bind-key = select-layout even-horizontal

# pane navigation (and other ops) via mouse click
# set-option -g mouse on

# pane movement
bind-key j command-prompt -p "join pane from:" "join-pane -h -s '%%'"
bind-key s command-prompt -p "send pane to:"   "join-pane -h -t '%%'"
bind-key m command-prompt -p "move window to session:window:"  "move-window -t '%%'"
bind-key g command-prompt -p "get window from session:window:" "move-window -s '%%'"
bind-key b break-pane
bind-key P new-session -d -s pip \; move-window -t pip
bind-key ^p move-window -t pip
